<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.talend.components</groupId>
        <artifactId>components-adapter-beam-parent</artifactId>
        <version>0.28.7-SNAPSHOT</version>
        <relativePath>../../../core/components-adapter-beam-parent/pom.xml</relativePath>
    </parent>

    <artifactId>simplefileio-runtime</artifactId>

    <name>Components - Simple File IO Runtime</name>
    <packaging>jar</packaging>

    <properties>
        <!-- See below on information for hadoop-aws. -->
        <hadoop.aws.artifactId>hadoop-aws-tlnd</hadoop.aws.artifactId>
        <hadoop.aws.version>2.7.3.1</hadoop.aws.version>
        <parquet.version>1.9.0</parquet.version>
        <!--
        <poi.version>3.16</poi.version>
        -->
        <tika.version>1.15</tika.version>
        <coverage.sonar.reportRoot>${project.basedir}/..</coverage.sonar.reportRoot>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>simplefileio-definition</artifactId>
            <version>${components.version}</version>
        </dependency>
        <!-- I'm not sure why this is necessary for the Spark runner tests. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-adapter-beam</artifactId>
        </dependency>
        <!--
        For S3: We are currently using a patched version of Hadoop 2.7.3 hadoop-aws jar:

        * In order to not collide with an existing hadoop-aws.jar on the cluster, the package names have been shaded
          and the file system scheme has been changed to register s3t instead of s3a.

        * Specific versions of Amazon SDK, jackson and joda-time have been included into the jar with shaded packages.
         -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>${hadoop.aws.artifactId}</artifactId>
            <version>${hadoop.aws.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.amazonaws</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- includes avro -->
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-direct-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-extensions-protobuf</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-io-hadoop-common</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-extensions-google-cloud-platform-core</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop-talend.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-core</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-hdfs</artifactId>
            <version>${hadoop-talend.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-mapred</artifactId>
            <version>${avro.version}</version>
            <classifier>hadoop2</classifier>
            <exclusions>
                <!-- exclude old Jetty version of servlet API -->
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <!--  exclude those dependencies cause they have know CVEs -->
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-core-asl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-mapper-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- include the avro dependencies manually with fixes for those know CVEs -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>

        <!-- To include in dependencies.txt. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- CSV format-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
        </dependency>

        <!-- PARQUET format -->
        <dependency>
            <groupId>org.apache.parquet</groupId>
            <artifactId>parquet-avro</artifactId>
            <version>${parquet.version}</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>daikon</artifactId>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <!-- For Spark integration tests. -->
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-spark</artifactId>
            <version>${beam.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- necessary for Spark unit tests -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-yarn_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- For dependency resolution. -->
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-api</artifactId>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-aether</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- MiniDFSCluster -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-hdfs</artifactId>
            <version>${hadoop.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <!-- Excel format support -->
        <!-- tika introduce poi, so not necessary
        <dependency>
            <groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
        </dependency>
        -->
        <dependency>
	    	<groupId>com.monitorjbl</groupId>
		    <artifactId>xlsx-streamer</artifactId>
		    <version>1.0.0</version>
		    <exclusions>
                <exclusion>
		      		<groupId>org.apache.poi</groupId>
		      		<artifactId>poi-ooxml</artifactId>
			    </exclusion>
			    <exclusion>
			      	<groupId>xerces</groupId>
			      	<artifactId>xercesImpl</artifactId>
			    </exclusion>
			    <exclusion>
			      	<groupId>org.slf4j</groupId>
			      	<artifactId>slf4j-api</artifactId>
			    </exclusion>
            </exclusions>
	  	</dependency>
        <dependency>
    		<groupId>org.apache.tika</groupId>
		    <artifactId>tika-parsers</artifactId>
	    	<version>${tika.version}</version>
			<exclusions>
                <exclusion>
                    <groupId>org.osgi</groupId>
                    <artifactId>org.osgi.core</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>edu.usc.ir</groupId>
                    <artifactId>sentiment-analysis-parser</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>org.opengis</groupId>
					<artifactId>geoapi</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>org.apache.commons</groupId>
					<artifactId>commons-csv</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>org.apache.sis.core</groupId>
					<artifactId>sis-utility</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>org.apache.sis.storage</groupId>
					<artifactId>sis-netcdf</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>org.apache.sis.core</groupId>
					<artifactId>sis-metadata</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>edu.ucar</groupId>
					<artifactId>httpservices</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>edu.ucar</groupId>
					<artifactId>cdm</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>edu.ucar</groupId>
					<artifactId>grib</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>edu.ucar</groupId>
					<artifactId>netcdf4</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>com.github.jai-imageio</groupId>
					<artifactId>jai-imageio-jpeg2000</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>com.github.jai-imageio</groupId>
					<artifactId>jai-imageio-core</artifactId>
                </exclusion>
				<exclusion>
                    <groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
                </exclusion>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
                </exclusion>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
                </exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>jul-to-slf4j</artifactId>
                </exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
  		</dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20-PAXEXAM-PATCH</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                    <argLine>-Xms512m -Xmx1024m ${jacoco.agent.it.argLine}</argLine>
                    <systemPropertyVariables>
                        <s3.accesskey>${s3.accesskey}</s3.accesskey>
                        <s3.secretkey>${s3.secretkey}</s3.secretkey>
                        <s3.bucket>${s3.bucket}</s3.bucket>
                        <s3.ssekmskey>${s3.ssekmskey}</s3.ssekmskey>
                        <s3.csekmskey>${s3.csekmskey}</s3.csekmskey>
                        <bigquery.project>${bigquery.project}</bigquery.project>
                        <bigquery.service.account.file>${bigquery.service.account.file}
                        </bigquery.service.account.file>
                        <bigquery.gcp.temp.folder>${bigquery.gcp.temp.folder}
                        </bigquery.gcp.temp.folder>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
