<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.talend.components</groupId>
        <artifactId>components-adapter-beam-parent</artifactId>
        <version>0.28.6</version>
        <relativePath>../../../core/components-adapter-beam-parent/pom.xml</relativePath>
    </parent>

    <artifactId>kinesis-runtime</artifactId>
    <packaging>jar</packaging>

    <name>Components - Kinesis Runtime</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <coverage.sonar.reportRoot>${project.basedir}/..</coverage.sonar.reportRoot>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>kinesis-definition</artifactId>
            <version>${components.version}</version>
        </dependency>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-adapter-beam</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-direct-java</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-io-kinesis</artifactId>
            <version>${beam.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sts</artifactId>
        </dependency>
        <!-- necessary for Spark unit tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <!-- necessary for Spark unit tests -->
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-spark</artifactId>
            <version>${beam.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20-PAXEXAM-PATCH</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                    <argLine>-Xms512m -Xmx1024m ${jacoco.agent.it.argLine}</argLine>
                    <systemPropertyVariables>
                        <aws.accesskey>${aws.accesskey}</aws.accesskey>
                        <aws.secretkey>${aws.secretkey}</aws.secretkey>
                        <aws.region>${aws.region}</aws.region>
                        <aws.sts.role.arn>${aws.sts.role.arn}</aws.sts.role.arn>
                        <aws.sts.role.sessionname>${aws.sts.role.sessionname}</aws.sts.role.sessionname>
                        <aws.sts.role.externalid>${aws.sts.role.externalid}</aws.sts.role.externalid>
                        <aws.sts.role.accesskey>${aws.sts.role.accesskey}</aws.sts.role.accesskey>
                        <aws.sts.role.secretkey>${aws.sts.role.secretkey}</aws.sts.role.secretkey>
                        <localstack.kinesis.endpoint>http://${docker.host.address}:${kinesis.port}
                        </localstack.kinesis.endpoint>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <!-- for localstack https://github.com/mhart/kinesalite#cbor-protocol-issues-with-the-java-sdk -->
                        <AWS_CBOR_DISABLE>true</AWS_CBOR_DISABLE>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>

                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${really.skip.tests}</skip>
                            <images>
                                <image>
                                    <name>localstack/localstack</name>
                                    <run>
                                        <ports>
                                            <port>kinesis.port:4568</port>
                                        </ports>
                                        <wait>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${really.skip.tests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
